/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, clang 11.0.1-2 -fPIC -Os) */

module clk_rdg2(reset, clk_in, clk_out);
  
  wire _0_;
  wire _1_;
  wire [12:0] _2_;
  wire [12:0] _3_;
  wire _4_;
  reg _5_;
  reg [12:0] _6_ = 13'h0000;
  input clk_in;
  wire clk_in;
  output clk_out;
  wire clk_out;
  input reset;
  wire reset;
  wire sig_clk;
  wire [12:0] sig_prescale;
  assign _3_ = _0_ ? 13'h0000 : _2_;
  assign _4_ = _0_ ? _1_ : sig_clk;
  
  always @(posedge clk_in, posedge reset)
    if (reset) _5_ <= 1'h0;
    else _5_ <= _4_;
  always @(posedge clk_in, posedge reset)
    if (reset) _6_ <= 13'h0000;
    else _6_ <= _3_;
  assign _0_ = sig_prescale == 13'h0019;
  assign _1_ = ~ sig_clk;
  assign _2_ = sig_prescale + 13'h0001;
  assign sig_clk = _5_;
  assign sig_prescale = _6_;
  assign clk_out = sig_clk;
endmodule
