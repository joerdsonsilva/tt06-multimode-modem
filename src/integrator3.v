/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, clang 11.0.1-2 -fPIC -Os) */

module integrator3(clk, reset, comp_in, comp_out);
  wire _00_;
  wire [31:0] _01_;
  reg [31:0] _02_ = 32'd0;
  reg _03_;
  wire [31:0] _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire [31:0] _10_;
  wire _11_;
  input clk;
  wire clk;
  input [6:0] comp_in;
  wire [6:0] comp_in;
  output comp_out;
  wire comp_out;
  wire [31:0] i;
  input reset;
  wire reset;
  assign _05_ = i == 32'd2;
  assign _06_ = $signed(i) > $signed(32'd2);
  assign _07_ = _05_ | _06_;
  assign _08_ = _07_ ? 1'h1 : 1'h0;
  assign _09_ = _00_ ? _08_ : 1'h0;
  assign _10_ = _00_ ? _04_ : 32'd0;
  assign _11_ = ~ reset;
  assign _01_ = _11_ ? _10_ : i;
  always @(posedge clk)
    _02_ <= _01_;
  always @(posedge clk, posedge reset)
    if (reset) _03_ <= 1'h0;
    else _03_ <= _09_;
  assign _00_ = comp_in == 7'h7f;
  assign _04_ = i + 32'd1;
  assign i = _02_;
  assign comp_out = _03_;
endmodule
