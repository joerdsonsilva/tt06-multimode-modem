/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, clang 11.0.1-2 -fPIC -Os) */

module rdg3(clk, data);
  wire _00_;
  wire _01_;
  reg _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire [31:0] _08_;
  wire [31:0] _09_;
  reg [31:0] _10_ = 32'd0;
  wire a;
  wire b;
  wire c;
  input clk;
  wire clk;
  wire d;
  output data;
  wire data;
  wire [31:0] i;
  wire sig_data;
  assign _07_ = i == 32'd1;
  assign _08_ = i + 32'd1;
  assign _09_ = _07_ ? 32'd0 : _08_;
  always @(negedge clk)
    _10_ <= _09_;
  assign _01_ = _07_ ? sig_data : _02_;
  always @(negedge clk)
    _02_ <= _01_;
  assign _06_ = d ^ sig_data;
  ffd3 ffd0 (
    .clk(clk),
    .d(c),
    .q(_04_)
  );
  ffd3 ffd1 (
    .clk(clk),
    .d(a),
    .q(_00_)
  );
  ffd3 ffd2 (
    .clk(clk),
    .d(b),
    .q(_03_)
  );
  ffd3 ffd4 (
    .clk(clk),
    .d(d),
    .q(_05_)
  );
  assign a = _06_;
  assign b = _00_;
  assign c = _03_;
  assign d = _04_;
  assign sig_data = _05_;
  assign i = _10_;
  assign data = _02_;
endmodule
